# Production Dockerfile for Django app

FROM python:3.9-slim-buster as base

# Use non-interactive frontend for debconf
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

ENV DJANGO_PRODUCTION_MODE 1
ENV DJANGO_SETTINGS_MODULE settings.cloud
ENV DJANGO_DEBUG 0
ENV PYTHONPYCACHEPREFIX /.pycache

# Let all *.pyc files stay within the container, for Python >= 3.8
RUN mkdir -p $PYTHONPYCACHEPREFIX

# Create a directory for the logs
RUN mkdir -p /var/log/spa_proof_of_concept

COPY ./wait-for-it.sh /usr/bin/

# Install system requirements
RUN apt-get update && \
    apt-get install -y --no-install-recommends build-essential gettext libpq-dev zlib1g-dev libjpeg62-turbo-dev wget && \
    rm -rf /var/lib/apt/lists/*

ENV POETRY_HOME "$HOME/.poetry"
ENV POETRY_NO_INTERACTION 1
ENV POETRY_VIRTUALENVS_CREATE 0
ENV PATH="$POETRY_HOME/bin:$PATH"

RUN wget -O - -o /dev/null https://install.python-poetry.org | python3 -

COPY pyproject.toml /
COPY poetry.lock /

# Install all non-dev dependencies from poetry.lock
RUN poetry install --no-dev

# Copy code
COPY ./spa_proof_of_concept /app

# Set the default directory where CMD will execute
WORKDIR /app

# Compile translations to .mo files
RUN DJANGO_DOCKER_BUILD=True python manage.py compilemessages

# Run Gunicorn by default
CMD bash
